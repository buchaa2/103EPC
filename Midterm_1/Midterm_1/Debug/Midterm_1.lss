
Midterm_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a2  00800100  00000690  00000724  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000690  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  008001a2  008001a2  000007c6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000007c6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000007f8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000048  00000000  00000000  00000838  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e16  00000000  00000000  00000880  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a0d  00000000  00000000  00001696  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000066d  00000000  00000000  000020a3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000d0  00000000  00000000  00002710  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00008321  00000000  00000000  000027e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004a8  00000000  00000000  0000ab01  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000038  00000000  00000000  0000afa9  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  000004f8  00000000  00000000  0000afe1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	59 c0       	rjmp	.+178    	; 0xb4 <__ctors_end>
   2:	00 00       	nop
   4:	72 c0       	rjmp	.+228    	; 0xea <__bad_interrupt>
   6:	00 00       	nop
   8:	70 c0       	rjmp	.+224    	; 0xea <__bad_interrupt>
   a:	00 00       	nop
   c:	6e c0       	rjmp	.+220    	; 0xea <__bad_interrupt>
   e:	00 00       	nop
  10:	6c c0       	rjmp	.+216    	; 0xea <__bad_interrupt>
  12:	00 00       	nop
  14:	6a c0       	rjmp	.+212    	; 0xea <__bad_interrupt>
  16:	00 00       	nop
  18:	68 c0       	rjmp	.+208    	; 0xea <__bad_interrupt>
  1a:	00 00       	nop
  1c:	66 c0       	rjmp	.+204    	; 0xea <__bad_interrupt>
  1e:	00 00       	nop
  20:	64 c0       	rjmp	.+200    	; 0xea <__bad_interrupt>
  22:	00 00       	nop
  24:	62 c0       	rjmp	.+196    	; 0xea <__bad_interrupt>
  26:	00 00       	nop
  28:	60 c0       	rjmp	.+192    	; 0xea <__bad_interrupt>
  2a:	00 00       	nop
  2c:	5e c0       	rjmp	.+188    	; 0xea <__bad_interrupt>
  2e:	00 00       	nop
  30:	5c c0       	rjmp	.+184    	; 0xea <__bad_interrupt>
  32:	00 00       	nop
  34:	5a c0       	rjmp	.+180    	; 0xea <__bad_interrupt>
  36:	00 00       	nop
  38:	58 c0       	rjmp	.+176    	; 0xea <__bad_interrupt>
  3a:	00 00       	nop
  3c:	56 c0       	rjmp	.+172    	; 0xea <__bad_interrupt>
  3e:	00 00       	nop
  40:	b7 c0       	rjmp	.+366    	; 0x1b0 <__vector_16>
  42:	00 00       	nop
  44:	52 c0       	rjmp	.+164    	; 0xea <__bad_interrupt>
  46:	00 00       	nop
  48:	50 c0       	rjmp	.+160    	; 0xea <__bad_interrupt>
  4a:	00 00       	nop
  4c:	4e c0       	rjmp	.+156    	; 0xea <__bad_interrupt>
  4e:	00 00       	nop
  50:	4c c0       	rjmp	.+152    	; 0xea <__bad_interrupt>
  52:	00 00       	nop
  54:	4a c0       	rjmp	.+148    	; 0xea <__bad_interrupt>
  56:	00 00       	nop
  58:	48 c0       	rjmp	.+144    	; 0xea <__bad_interrupt>
  5a:	00 00       	nop
  5c:	46 c0       	rjmp	.+140    	; 0xea <__bad_interrupt>
  5e:	00 00       	nop
  60:	44 c0       	rjmp	.+136    	; 0xea <__bad_interrupt>
  62:	00 00       	nop
  64:	42 c0       	rjmp	.+132    	; 0xea <__bad_interrupt>
  66:	00 00       	nop
  68:	40 c0       	rjmp	.+128    	; 0xea <__bad_interrupt>
  6a:	00 00       	nop
  6c:	3e c0       	rjmp	.+124    	; 0xea <__bad_interrupt>
  6e:	00 00       	nop
  70:	3c c0       	rjmp	.+120    	; 0xea <__bad_interrupt>
  72:	00 00       	nop
  74:	3a c0       	rjmp	.+116    	; 0xea <__bad_interrupt>
  76:	00 00       	nop
  78:	38 c0       	rjmp	.+112    	; 0xea <__bad_interrupt>
  7a:	00 00       	nop
  7c:	36 c0       	rjmp	.+108    	; 0xea <__bad_interrupt>
  7e:	00 00       	nop
  80:	34 c0       	rjmp	.+104    	; 0xea <__bad_interrupt>
  82:	00 00       	nop
  84:	32 c0       	rjmp	.+100    	; 0xea <__bad_interrupt>
  86:	00 00       	nop
  88:	30 c0       	rjmp	.+96     	; 0xea <__bad_interrupt>
  8a:	00 00       	nop
  8c:	2e c0       	rjmp	.+92     	; 0xea <__bad_interrupt>
  8e:	00 00       	nop
  90:	2c c0       	rjmp	.+88     	; 0xea <__bad_interrupt>
  92:	00 00       	nop
  94:	2a c0       	rjmp	.+84     	; 0xea <__bad_interrupt>
  96:	00 00       	nop
  98:	28 c0       	rjmp	.+80     	; 0xea <__bad_interrupt>
  9a:	00 00       	nop
  9c:	26 c0       	rjmp	.+76     	; 0xea <__bad_interrupt>
  9e:	00 00       	nop
  a0:	24 c0       	rjmp	.+72     	; 0xea <__bad_interrupt>
  a2:	00 00       	nop
  a4:	22 c0       	rjmp	.+68     	; 0xea <__bad_interrupt>
  a6:	00 00       	nop
  a8:	20 c0       	rjmp	.+64     	; 0xea <__bad_interrupt>
  aa:	00 00       	nop
  ac:	1e c0       	rjmp	.+60     	; 0xea <__bad_interrupt>
  ae:	00 00       	nop
  b0:	1c c0       	rjmp	.+56     	; 0xea <__bad_interrupt>
	...

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	e0 e9       	ldi	r30, 0x90	; 144
  c8:	f6 e0       	ldi	r31, 0x06	; 6
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	a2 3a       	cpi	r26, 0xA2	; 162
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
  d6:	21 e0       	ldi	r18, 0x01	; 1
  d8:	a2 ea       	ldi	r26, 0xA2	; 162
  da:	b1 e0       	ldi	r27, 0x01	; 1
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
  de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
  e0:	a3 3a       	cpi	r26, 0xA3	; 163
  e2:	b2 07       	cpc	r27, r18
  e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
  e6:	2e d0       	rcall	.+92     	; 0x144 <main>
  e8:	d1 c2       	rjmp	.+1442   	; 0x68c <_exit>

000000ea <__bad_interrupt>:
  ea:	8a cf       	rjmp	.-236    	; 0x0 <__vectors>

000000ec <USART_init>:
	{ //sit here waiting for interrupt
	}
}
void USART_init(void)
{
	UCSR0A = (1 << U2X0); 
  ec:	82 e0       	ldi	r24, 0x02	; 2
  ee:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
	UBRR0H = (uint8_t)(BAUD_PRESCALLER >> 8);
  f2:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (uint8_t)(BAUD_PRESCALLER);
  f6:	80 e1       	ldi	r24, 0x10	; 16
  f8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0B = (1 << RXEN0) | (1 << TXEN0);
  fc:	88 e1       	ldi	r24, 0x18	; 24
  fe:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	UCSR0C = (3 << UCSZ00);
 102:	86 e0       	ldi	r24, 0x06	; 6
 104:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 108:	08 95       	ret

0000010a <USART_transmit>:
}

void USART_transmit(unsigned char data)
{
	while(!(UCSR0A & (1 << UDRE0)));
 10a:	e0 ec       	ldi	r30, 0xC0	; 192
 10c:	f0 e0       	ldi	r31, 0x00	; 0
 10e:	90 81       	ld	r25, Z
 110:	95 ff       	sbrs	r25, 5
 112:	fd cf       	rjmp	.-6      	; 0x10e <USART_transmit+0x4>
	UDR0 = data;
 114:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 118:	08 95       	ret

0000011a <USART_putstring>:
}



void USART_putstring(char* StringPtr)
{
 11a:	cf 93       	push	r28
 11c:	df 93       	push	r29
 11e:	ec 01       	movw	r28, r24
	while(*StringPtr != 0x00)
 120:	88 81       	ld	r24, Y
 122:	88 23       	and	r24, r24
 124:	29 f0       	breq	.+10     	; 0x130 <USART_putstring+0x16>
 126:	21 96       	adiw	r28, 0x01	; 1
	{
		USART_transmit(*StringPtr);
 128:	f0 df       	rcall	.-32     	; 0x10a <USART_transmit>



void USART_putstring(char* StringPtr)
{
	while(*StringPtr != 0x00)
 12a:	89 91       	ld	r24, Y+
 12c:	81 11       	cpse	r24, r1
 12e:	fc cf       	rjmp	.-8      	; 0x128 <USART_putstring+0xe>
	{
		USART_transmit(*StringPtr);
		StringPtr++;
	}
}
 130:	df 91       	pop	r29
 132:	cf 91       	pop	r28
 134:	08 95       	ret

00000136 <ADC_init>:

void ADC_init (void)
{
	ADMUX = (0<<REFS1)|
 136:	84 e4       	ldi	r24, 0x44	; 68
 138:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	(1<<REFS0)|
	(0<<ADLAR)|
	(1<<MUX2)|
	(0<<MUX1)|	// ADC5 PC4
	(0<<MUX0);
	ADCSRA = (1<<ADEN)|
 13c:	83 e8       	ldi	r24, 0x83	; 131
 13e:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 142:	08 95       	ret

00000144 <main>:
void USART_putstring(char* StringPtr); //scan through string
void ADC_init (void); //function to initialize ADC

int main(void)
{
	USART_init(); //initialize USART
 144:	d3 df       	rcall	.-90     	; 0xec <USART_init>
	ADC_init (); //initialize ADC
 146:	f7 df       	rcall	.-18     	; 0x136 <ADC_init>
 148:	81 e0       	ldi	r24, 0x01	; 1
	USART_putstring("AT+CWMODE=1\r\n");//set esp01 to station 1 mode
 14a:	91 e0       	ldi	r25, 0x01	; 1
 14c:	e6 df       	rcall	.-52     	; 0x11a <USART_putstring>
 14e:	2f ef       	ldi	r18, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 150:	89 ef       	ldi	r24, 0xF9	; 249
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	21 50       	subi	r18, 0x01	; 1
 156:	80 40       	sbci	r24, 0x00	; 0
 158:	90 40       	sbci	r25, 0x00	; 0
 15a:	e1 f7       	brne	.-8      	; 0x154 <main+0x10>
 15c:	00 c0       	rjmp	.+0      	; 0x15e <main+0x1a>
 15e:	00 00       	nop
	_delay_ms(20);//string needs time to process before sending another command
	USART_putstring("AT+CWJAP=\"ASUS\",\"abulator\"\r\n");// Enable connection
 160:	8f e0       	ldi	r24, 0x0F	; 15
 162:	91 e0       	ldi	r25, 0x01	; 1
 164:	da df       	rcall	.-76     	; 0x11a <USART_putstring>
 166:	2f ef       	ldi	r18, 0xFF	; 255
 168:	89 ef       	ldi	r24, 0xF9	; 249
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	21 50       	subi	r18, 0x01	; 1
 16e:	80 40       	sbci	r24, 0x00	; 0
 170:	90 40       	sbci	r25, 0x00	; 0
 172:	e1 f7       	brne	.-8      	; 0x16c <main+0x28>
 174:	00 c0       	rjmp	.+0      	; 0x176 <main+0x32>
 176:	00 00       	nop
	_delay_ms(20);//string needs time to process before sending another command
	USART_putstring("AT+CIPMUX=0\r\n"); 
 178:	8c e2       	ldi	r24, 0x2C	; 44
 17a:	91 e0       	ldi	r25, 0x01	; 1
 17c:	ce df       	rcall	.-100    	; 0x11a <USART_putstring>
 17e:	2f ef       	ldi	r18, 0xFF	; 255
 180:	89 ef       	ldi	r24, 0xF9	; 249
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	21 50       	subi	r18, 0x01	; 1
 186:	80 40       	sbci	r24, 0x00	; 0
 188:	90 40       	sbci	r25, 0x00	; 0
 18a:	e1 f7       	brne	.-8      	; 0x184 <main+0x40>
 18c:	00 c0       	rjmp	.+0      	; 0x18e <main+0x4a>
 18e:	00 00       	nop
	_delay_ms(20);//string needs time to process before sending another command
	USART_putstring("AT+CIPMUX=0\r\n");
 190:	8c e2       	ldi	r24, 0x2C	; 44
 192:	91 e0       	ldi	r25, 0x01	; 1
 194:	c2 df       	rcall	.-124    	; 0x11a <USART_putstring>
 196:	14 bc       	out	0x24, r1	; 36
	
	TCCR0A = 0x00; //set normal operation
 198:	85 b5       	in	r24, 0x25	; 37
	TCCR0B |= (1 << CS02); //set prescalar to 256
 19a:	84 60       	ori	r24, 0x04	; 4
 19c:	85 bd       	out	0x25, r24	; 37
 19e:	86 e0       	ldi	r24, 0x06	; 6
	TCNT0 = 6;
 1a0:	86 bd       	out	0x26, r24	; 38
 1a2:	ee e6       	ldi	r30, 0x6E	; 110
	TIMSK0 |= (1 << TOIE0);
 1a4:	f0 e0       	ldi	r31, 0x00	; 0
 1a6:	80 81       	ld	r24, Z
 1a8:	81 60       	ori	r24, 0x01	; 1
 1aa:	80 83       	st	Z, r24
 1ac:	78 94       	sei
	sei(); //set interrupt
 1ae:	ff cf       	rjmp	.-2      	; 0x1ae <main+0x6a>

000001b0 <__vector_16>:
 1b0:	1f 92       	push	r1
	(1<<ADPS1)|
	(1<<ADPS0);
	
}
ISR (TIMER0_OVF_vect)
{
 1b2:	0f 92       	push	r0
 1b4:	0f b6       	in	r0, 0x3f	; 63
 1b6:	0f 92       	push	r0
 1b8:	11 24       	eor	r1, r1
 1ba:	2f 93       	push	r18
 1bc:	3f 93       	push	r19
 1be:	4f 93       	push	r20
 1c0:	5f 93       	push	r21
 1c2:	6f 93       	push	r22
 1c4:	7f 93       	push	r23
 1c6:	8f 93       	push	r24
 1c8:	9f 93       	push	r25
 1ca:	af 93       	push	r26
 1cc:	bf 93       	push	r27
 1ce:	cf 93       	push	r28
 1d0:	df 93       	push	r29
 1d2:	ef 93       	push	r30
 1d4:	ff 93       	push	r31
	OVFLOWCOUNT++;
 1d6:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <__data_end>
 1da:	8f 5f       	subi	r24, 0xFF	; 255
 1dc:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <__data_end>
	if (OVFLOWCOUNT == OVFLOWLIMIT)
 1e0:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <OVFLOWLIMIT>
 1e4:	89 13       	cpse	r24, r25
 1e6:	8c c0       	rjmp	.+280    	; 0x300 <__vector_16+0x150>
	{
		ADCSRA|=(1<<ADSC);
 1e8:	ea e7       	ldi	r30, 0x7A	; 122
 1ea:	f0 e0       	ldi	r31, 0x00	; 0
 1ec:	80 81       	ld	r24, Z
 1ee:	80 64       	ori	r24, 0x40	; 64
 1f0:	80 83       	st	Z, r24
		while((ADCSRA&(1<<ADIF))==0);
 1f2:	80 81       	ld	r24, Z
 1f4:	84 ff       	sbrs	r24, 4
 1f6:	fd cf       	rjmp	.-6      	; 0x1f2 <__vector_16+0x42>
		
		ADCSRA |= (1<<ADIF);
 1f8:	ea e7       	ldi	r30, 0x7A	; 122
 1fa:	f0 e0       	ldi	r31, 0x00	; 0
 1fc:	80 81       	ld	r24, Z
 1fe:	80 61       	ori	r24, 0x10	; 16
 200:	80 83       	st	Z, r24
		//take value from ADC and transmit it
		int var = ADCL;
 202:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
		var = var | (ADCH<<8);
 206:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
		var = (var/1024.0) * 5000/10;
 20a:	70 e0       	ldi	r23, 0x00	; 0
 20c:	78 2b       	or	r23, r24
 20e:	07 2e       	mov	r0, r23
 210:	00 0c       	add	r0, r0
 212:	88 0b       	sbc	r24, r24
 214:	99 0b       	sbc	r25, r25
 216:	24 d1       	rcall	.+584    	; 0x460 <__floatsisf>
 218:	20 e0       	ldi	r18, 0x00	; 0
 21a:	30 e0       	ldi	r19, 0x00	; 0
 21c:	40 e8       	ldi	r20, 0x80	; 128
 21e:	5a e3       	ldi	r21, 0x3A	; 58
 220:	ab d1       	rcall	.+854    	; 0x578 <__mulsf3>
 222:	20 e0       	ldi	r18, 0x00	; 0
 224:	30 e4       	ldi	r19, 0x40	; 64
 226:	4c e9       	ldi	r20, 0x9C	; 156
 228:	55 e4       	ldi	r21, 0x45	; 69
 22a:	a6 d1       	rcall	.+844    	; 0x578 <__mulsf3>
 22c:	20 e0       	ldi	r18, 0x00	; 0
 22e:	30 e0       	ldi	r19, 0x00	; 0
 230:	40 e2       	ldi	r20, 0x20	; 32
 232:	51 e4       	ldi	r21, 0x41	; 65
 234:	7a d0       	rcall	.+244    	; 0x32a <__divsf3>
		var = (var*2)+32;
 236:	e1 d0       	rcall	.+450    	; 0x3fa <__fixsfsi>
 238:	60 5f       	subi	r22, 0xF0	; 240
 23a:	7f 4f       	sbci	r23, 0xFF	; 255
 23c:	cb 01       	movw	r24, r22
 23e:	88 0f       	add	r24, r24
 240:	99 1f       	adc	r25, r25
		var = var % 100;
 242:	64 e6       	ldi	r22, 0x64	; 100
 244:	70 e0       	ldi	r23, 0x00	; 0
 246:	fb d1       	rcall	.+1014   	; 0x63e <__divmodhi4>
 248:	ec 01       	movw	r28, r24
		
		USART_putstring("AT+CIPSTART=\"TCP\",\"api.thingspeak.com\",80\r\n"); //connect to thingspeak
 24a:	8a e3       	ldi	r24, 0x3A	; 58
 24c:	91 e0       	ldi	r25, 0x01	; 1
 24e:	65 df       	rcall	.-310    	; 0x11a <USART_putstring>
 250:	2f ef       	ldi	r18, 0xFF	; 255
 252:	89 ef       	ldi	r24, 0xF9	; 249
 254:	90 e0       	ldi	r25, 0x00	; 0
 256:	21 50       	subi	r18, 0x01	; 1
 258:	80 40       	sbci	r24, 0x00	; 0
 25a:	90 40       	sbci	r25, 0x00	; 0
 25c:	e1 f7       	brne	.-8      	; 0x256 <__vector_16+0xa6>
 25e:	00 c0       	rjmp	.+0      	; 0x260 <__vector_16+0xb0>
 260:	00 00       	nop
		_delay_ms(20);
		USART_putstring("AT+CIPSEND=51\r\n"); //start sending data in transparent transmission mode
 262:	86 e6       	ldi	r24, 0x66	; 102
 264:	91 e0       	ldi	r25, 0x01	; 1
 266:	59 df       	rcall	.-334    	; 0x11a <USART_putstring>
 268:	2f ef       	ldi	r18, 0xFF	; 255
 26a:	89 ef       	ldi	r24, 0xF9	; 249
 26c:	90 e0       	ldi	r25, 0x00	; 0
 26e:	21 50       	subi	r18, 0x01	; 1
 270:	80 40       	sbci	r24, 0x00	; 0
 272:	90 40       	sbci	r25, 0x00	; 0
 274:	e1 f7       	brne	.-8      	; 0x26e <__vector_16+0xbe>
 276:	00 c0       	rjmp	.+0      	; 0x278 <__vector_16+0xc8>
 278:	00 00       	nop
		_delay_ms(20);
		USART_putstring("GET /update?key=QWQ7N2VIHJPFQR3F&field1="); //prepare to send data using "Write" API Key
 27a:	86 e7       	ldi	r24, 0x76	; 118
 27c:	91 e0       	ldi	r25, 0x01	; 1
 27e:	4d df       	rcall	.-358    	; 0x11a <USART_putstring>
 280:	2f ef       	ldi	r18, 0xFF	; 255
 282:	89 ef       	ldi	r24, 0xF9	; 249
 284:	90 e0       	ldi	r25, 0x00	; 0
 286:	21 50       	subi	r18, 0x01	; 1
 288:	80 40       	sbci	r24, 0x00	; 0
 28a:	90 40       	sbci	r25, 0x00	; 0
 28c:	e1 f7       	brne	.-8      	; 0x286 <__vector_16+0xd6>
 28e:	00 c0       	rjmp	.+0      	; 0x290 <__vector_16+0xe0>
		_delay_ms(20);
		USART_transmit((var/10)+'0');
 290:	00 00       	nop
 292:	ce 01       	movw	r24, r28
 294:	6a e0       	ldi	r22, 0x0A	; 10
 296:	70 e0       	ldi	r23, 0x00	; 0
 298:	d2 d1       	rcall	.+932    	; 0x63e <__divmodhi4>
 29a:	c8 2f       	mov	r28, r24
 29c:	80 e3       	ldi	r24, 0x30	; 48
 29e:	86 0f       	add	r24, r22
 2a0:	34 df       	rcall	.-408    	; 0x10a <USART_transmit>
 2a2:	2f ef       	ldi	r18, 0xFF	; 255
 2a4:	89 ef       	ldi	r24, 0xF9	; 249
 2a6:	90 e0       	ldi	r25, 0x00	; 0
 2a8:	21 50       	subi	r18, 0x01	; 1
 2aa:	80 40       	sbci	r24, 0x00	; 0
 2ac:	90 40       	sbci	r25, 0x00	; 0
 2ae:	e1 f7       	brne	.-8      	; 0x2a8 <__vector_16+0xf8>
 2b0:	00 c0       	rjmp	.+0      	; 0x2b2 <__vector_16+0x102>
 2b2:	00 00       	nop
		_delay_ms(20);
		var = var % 10;
		USART_transmit((var)+'0');
 2b4:	80 e3       	ldi	r24, 0x30	; 48
 2b6:	8c 0f       	add	r24, r28
 2b8:	28 df       	rcall	.-432    	; 0x10a <USART_transmit>
 2ba:	2f ef       	ldi	r18, 0xFF	; 255
 2bc:	89 ef       	ldi	r24, 0xF9	; 249
 2be:	90 e0       	ldi	r25, 0x00	; 0
 2c0:	21 50       	subi	r18, 0x01	; 1
 2c2:	80 40       	sbci	r24, 0x00	; 0
 2c4:	90 40       	sbci	r25, 0x00	; 0
 2c6:	e1 f7       	brne	.-8      	; 0x2c0 <__vector_16+0x110>
 2c8:	00 c0       	rjmp	.+0      	; 0x2ca <__vector_16+0x11a>
 2ca:	00 00       	nop
		_delay_ms(20);
		USART_putstring(" ");
 2cc:	8f e9       	ldi	r24, 0x9F	; 159
 2ce:	91 e0       	ldi	r25, 0x01	; 1
 2d0:	24 df       	rcall	.-440    	; 0x11a <USART_putstring>
 2d2:	2f ef       	ldi	r18, 0xFF	; 255
 2d4:	89 ef       	ldi	r24, 0xF9	; 249
 2d6:	90 e0       	ldi	r25, 0x00	; 0
 2d8:	21 50       	subi	r18, 0x01	; 1
 2da:	80 40       	sbci	r24, 0x00	; 0
 2dc:	90 40       	sbci	r25, 0x00	; 0
 2de:	e1 f7       	brne	.-8      	; 0x2d8 <__vector_16+0x128>
 2e0:	00 c0       	rjmp	.+0      	; 0x2e2 <__vector_16+0x132>
 2e2:	00 00       	nop
		_delay_ms(20);
		USART_putstring("\r\n");
 2e4:	89 e2       	ldi	r24, 0x29	; 41
 2e6:	91 e0       	ldi	r25, 0x01	; 1
 2e8:	18 df       	rcall	.-464    	; 0x11a <USART_putstring>
 2ea:	2f ef       	ldi	r18, 0xFF	; 255
 2ec:	89 ef       	ldi	r24, 0xF9	; 249
 2ee:	90 e0       	ldi	r25, 0x00	; 0
 2f0:	21 50       	subi	r18, 0x01	; 1
 2f2:	80 40       	sbci	r24, 0x00	; 0
 2f4:	90 40       	sbci	r25, 0x00	; 0
 2f6:	e1 f7       	brne	.-8      	; 0x2f0 <__vector_16+0x140>
 2f8:	00 c0       	rjmp	.+0      	; 0x2fa <__vector_16+0x14a>
 2fa:	00 00       	nop
 2fc:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <__data_end>
		_delay_ms(20);
		OVFLOWCOUNT=0;
 300:	86 e0       	ldi	r24, 0x06	; 6
	}
	TCNT0 = 6;
 302:	86 bd       	out	0x26, r24	; 38
 304:	ff 91       	pop	r31
}
 306:	ef 91       	pop	r30
 308:	df 91       	pop	r29
 30a:	cf 91       	pop	r28
 30c:	bf 91       	pop	r27
 30e:	af 91       	pop	r26
 310:	9f 91       	pop	r25
 312:	8f 91       	pop	r24
 314:	7f 91       	pop	r23
 316:	6f 91       	pop	r22
 318:	5f 91       	pop	r21
 31a:	4f 91       	pop	r20
 31c:	3f 91       	pop	r19
 31e:	2f 91       	pop	r18
 320:	0f 90       	pop	r0
 322:	0f be       	out	0x3f, r0	; 63
 324:	0f 90       	pop	r0
 326:	1f 90       	pop	r1
 328:	18 95       	reti

0000032a <__divsf3>:
 32a:	0c d0       	rcall	.+24     	; 0x344 <__divsf3x>
 32c:	eb c0       	rjmp	.+470    	; 0x504 <__fp_round>
 32e:	e3 d0       	rcall	.+454    	; 0x4f6 <__fp_pscB>
 330:	40 f0       	brcs	.+16     	; 0x342 <__divsf3+0x18>
 332:	da d0       	rcall	.+436    	; 0x4e8 <__fp_pscA>
 334:	30 f0       	brcs	.+12     	; 0x342 <__divsf3+0x18>
 336:	21 f4       	brne	.+8      	; 0x340 <__divsf3+0x16>
 338:	5f 3f       	cpi	r21, 0xFF	; 255
 33a:	19 f0       	breq	.+6      	; 0x342 <__divsf3+0x18>
 33c:	cc c0       	rjmp	.+408    	; 0x4d6 <__fp_inf>
 33e:	51 11       	cpse	r21, r1
 340:	15 c1       	rjmp	.+554    	; 0x56c <__fp_szero>
 342:	cf c0       	rjmp	.+414    	; 0x4e2 <__fp_nan>

00000344 <__divsf3x>:
 344:	f0 d0       	rcall	.+480    	; 0x526 <__fp_split3>
 346:	98 f3       	brcs	.-26     	; 0x32e <__divsf3+0x4>

00000348 <__divsf3_pse>:
 348:	99 23       	and	r25, r25
 34a:	c9 f3       	breq	.-14     	; 0x33e <__divsf3+0x14>
 34c:	55 23       	and	r21, r21
 34e:	b1 f3       	breq	.-20     	; 0x33c <__divsf3+0x12>
 350:	95 1b       	sub	r25, r21
 352:	55 0b       	sbc	r21, r21
 354:	bb 27       	eor	r27, r27
 356:	aa 27       	eor	r26, r26
 358:	62 17       	cp	r22, r18
 35a:	73 07       	cpc	r23, r19
 35c:	84 07       	cpc	r24, r20
 35e:	38 f0       	brcs	.+14     	; 0x36e <__divsf3_pse+0x26>
 360:	9f 5f       	subi	r25, 0xFF	; 255
 362:	5f 4f       	sbci	r21, 0xFF	; 255
 364:	22 0f       	add	r18, r18
 366:	33 1f       	adc	r19, r19
 368:	44 1f       	adc	r20, r20
 36a:	aa 1f       	adc	r26, r26
 36c:	a9 f3       	breq	.-22     	; 0x358 <__divsf3_pse+0x10>
 36e:	33 d0       	rcall	.+102    	; 0x3d6 <__divsf3_pse+0x8e>
 370:	0e 2e       	mov	r0, r30
 372:	3a f0       	brmi	.+14     	; 0x382 <__divsf3_pse+0x3a>
 374:	e0 e8       	ldi	r30, 0x80	; 128
 376:	30 d0       	rcall	.+96     	; 0x3d8 <__divsf3_pse+0x90>
 378:	91 50       	subi	r25, 0x01	; 1
 37a:	50 40       	sbci	r21, 0x00	; 0
 37c:	e6 95       	lsr	r30
 37e:	00 1c       	adc	r0, r0
 380:	ca f7       	brpl	.-14     	; 0x374 <__divsf3_pse+0x2c>
 382:	29 d0       	rcall	.+82     	; 0x3d6 <__divsf3_pse+0x8e>
 384:	fe 2f       	mov	r31, r30
 386:	27 d0       	rcall	.+78     	; 0x3d6 <__divsf3_pse+0x8e>
 388:	66 0f       	add	r22, r22
 38a:	77 1f       	adc	r23, r23
 38c:	88 1f       	adc	r24, r24
 38e:	bb 1f       	adc	r27, r27
 390:	26 17       	cp	r18, r22
 392:	37 07       	cpc	r19, r23
 394:	48 07       	cpc	r20, r24
 396:	ab 07       	cpc	r26, r27
 398:	b0 e8       	ldi	r27, 0x80	; 128
 39a:	09 f0       	breq	.+2      	; 0x39e <__divsf3_pse+0x56>
 39c:	bb 0b       	sbc	r27, r27
 39e:	80 2d       	mov	r24, r0
 3a0:	bf 01       	movw	r22, r30
 3a2:	ff 27       	eor	r31, r31
 3a4:	93 58       	subi	r25, 0x83	; 131
 3a6:	5f 4f       	sbci	r21, 0xFF	; 255
 3a8:	2a f0       	brmi	.+10     	; 0x3b4 <__divsf3_pse+0x6c>
 3aa:	9e 3f       	cpi	r25, 0xFE	; 254
 3ac:	51 05       	cpc	r21, r1
 3ae:	68 f0       	brcs	.+26     	; 0x3ca <__divsf3_pse+0x82>
 3b0:	92 c0       	rjmp	.+292    	; 0x4d6 <__fp_inf>
 3b2:	dc c0       	rjmp	.+440    	; 0x56c <__fp_szero>
 3b4:	5f 3f       	cpi	r21, 0xFF	; 255
 3b6:	ec f3       	brlt	.-6      	; 0x3b2 <__divsf3_pse+0x6a>
 3b8:	98 3e       	cpi	r25, 0xE8	; 232
 3ba:	dc f3       	brlt	.-10     	; 0x3b2 <__divsf3_pse+0x6a>
 3bc:	86 95       	lsr	r24
 3be:	77 95       	ror	r23
 3c0:	67 95       	ror	r22
 3c2:	b7 95       	ror	r27
 3c4:	f7 95       	ror	r31
 3c6:	9f 5f       	subi	r25, 0xFF	; 255
 3c8:	c9 f7       	brne	.-14     	; 0x3bc <__divsf3_pse+0x74>
 3ca:	88 0f       	add	r24, r24
 3cc:	91 1d       	adc	r25, r1
 3ce:	96 95       	lsr	r25
 3d0:	87 95       	ror	r24
 3d2:	97 f9       	bld	r25, 7
 3d4:	08 95       	ret
 3d6:	e1 e0       	ldi	r30, 0x01	; 1
 3d8:	66 0f       	add	r22, r22
 3da:	77 1f       	adc	r23, r23
 3dc:	88 1f       	adc	r24, r24
 3de:	bb 1f       	adc	r27, r27
 3e0:	62 17       	cp	r22, r18
 3e2:	73 07       	cpc	r23, r19
 3e4:	84 07       	cpc	r24, r20
 3e6:	ba 07       	cpc	r27, r26
 3e8:	20 f0       	brcs	.+8      	; 0x3f2 <__divsf3_pse+0xaa>
 3ea:	62 1b       	sub	r22, r18
 3ec:	73 0b       	sbc	r23, r19
 3ee:	84 0b       	sbc	r24, r20
 3f0:	ba 0b       	sbc	r27, r26
 3f2:	ee 1f       	adc	r30, r30
 3f4:	88 f7       	brcc	.-30     	; 0x3d8 <__divsf3_pse+0x90>
 3f6:	e0 95       	com	r30
 3f8:	08 95       	ret

000003fa <__fixsfsi>:
 3fa:	04 d0       	rcall	.+8      	; 0x404 <__fixunssfsi>
 3fc:	68 94       	set
 3fe:	b1 11       	cpse	r27, r1
 400:	b5 c0       	rjmp	.+362    	; 0x56c <__fp_szero>
 402:	08 95       	ret

00000404 <__fixunssfsi>:
 404:	98 d0       	rcall	.+304    	; 0x536 <__fp_splitA>
 406:	88 f0       	brcs	.+34     	; 0x42a <__fixunssfsi+0x26>
 408:	9f 57       	subi	r25, 0x7F	; 127
 40a:	90 f0       	brcs	.+36     	; 0x430 <__fixunssfsi+0x2c>
 40c:	b9 2f       	mov	r27, r25
 40e:	99 27       	eor	r25, r25
 410:	b7 51       	subi	r27, 0x17	; 23
 412:	a0 f0       	brcs	.+40     	; 0x43c <__fixunssfsi+0x38>
 414:	d1 f0       	breq	.+52     	; 0x44a <__fixunssfsi+0x46>
 416:	66 0f       	add	r22, r22
 418:	77 1f       	adc	r23, r23
 41a:	88 1f       	adc	r24, r24
 41c:	99 1f       	adc	r25, r25
 41e:	1a f0       	brmi	.+6      	; 0x426 <__fixunssfsi+0x22>
 420:	ba 95       	dec	r27
 422:	c9 f7       	brne	.-14     	; 0x416 <__fixunssfsi+0x12>
 424:	12 c0       	rjmp	.+36     	; 0x44a <__fixunssfsi+0x46>
 426:	b1 30       	cpi	r27, 0x01	; 1
 428:	81 f0       	breq	.+32     	; 0x44a <__fixunssfsi+0x46>
 42a:	9f d0       	rcall	.+318    	; 0x56a <__fp_zero>
 42c:	b1 e0       	ldi	r27, 0x01	; 1
 42e:	08 95       	ret
 430:	9c c0       	rjmp	.+312    	; 0x56a <__fp_zero>
 432:	67 2f       	mov	r22, r23
 434:	78 2f       	mov	r23, r24
 436:	88 27       	eor	r24, r24
 438:	b8 5f       	subi	r27, 0xF8	; 248
 43a:	39 f0       	breq	.+14     	; 0x44a <__fixunssfsi+0x46>
 43c:	b9 3f       	cpi	r27, 0xF9	; 249
 43e:	cc f3       	brlt	.-14     	; 0x432 <__fixunssfsi+0x2e>
 440:	86 95       	lsr	r24
 442:	77 95       	ror	r23
 444:	67 95       	ror	r22
 446:	b3 95       	inc	r27
 448:	d9 f7       	brne	.-10     	; 0x440 <__fixunssfsi+0x3c>
 44a:	3e f4       	brtc	.+14     	; 0x45a <__fixunssfsi+0x56>
 44c:	90 95       	com	r25
 44e:	80 95       	com	r24
 450:	70 95       	com	r23
 452:	61 95       	neg	r22
 454:	7f 4f       	sbci	r23, 0xFF	; 255
 456:	8f 4f       	sbci	r24, 0xFF	; 255
 458:	9f 4f       	sbci	r25, 0xFF	; 255
 45a:	08 95       	ret

0000045c <__floatunsisf>:
 45c:	e8 94       	clt
 45e:	09 c0       	rjmp	.+18     	; 0x472 <__floatsisf+0x12>

00000460 <__floatsisf>:
 460:	97 fb       	bst	r25, 7
 462:	3e f4       	brtc	.+14     	; 0x472 <__floatsisf+0x12>
 464:	90 95       	com	r25
 466:	80 95       	com	r24
 468:	70 95       	com	r23
 46a:	61 95       	neg	r22
 46c:	7f 4f       	sbci	r23, 0xFF	; 255
 46e:	8f 4f       	sbci	r24, 0xFF	; 255
 470:	9f 4f       	sbci	r25, 0xFF	; 255
 472:	99 23       	and	r25, r25
 474:	a9 f0       	breq	.+42     	; 0x4a0 <__floatsisf+0x40>
 476:	f9 2f       	mov	r31, r25
 478:	96 e9       	ldi	r25, 0x96	; 150
 47a:	bb 27       	eor	r27, r27
 47c:	93 95       	inc	r25
 47e:	f6 95       	lsr	r31
 480:	87 95       	ror	r24
 482:	77 95       	ror	r23
 484:	67 95       	ror	r22
 486:	b7 95       	ror	r27
 488:	f1 11       	cpse	r31, r1
 48a:	f8 cf       	rjmp	.-16     	; 0x47c <__floatsisf+0x1c>
 48c:	fa f4       	brpl	.+62     	; 0x4cc <__floatsisf+0x6c>
 48e:	bb 0f       	add	r27, r27
 490:	11 f4       	brne	.+4      	; 0x496 <__floatsisf+0x36>
 492:	60 ff       	sbrs	r22, 0
 494:	1b c0       	rjmp	.+54     	; 0x4cc <__floatsisf+0x6c>
 496:	6f 5f       	subi	r22, 0xFF	; 255
 498:	7f 4f       	sbci	r23, 0xFF	; 255
 49a:	8f 4f       	sbci	r24, 0xFF	; 255
 49c:	9f 4f       	sbci	r25, 0xFF	; 255
 49e:	16 c0       	rjmp	.+44     	; 0x4cc <__floatsisf+0x6c>
 4a0:	88 23       	and	r24, r24
 4a2:	11 f0       	breq	.+4      	; 0x4a8 <__floatsisf+0x48>
 4a4:	96 e9       	ldi	r25, 0x96	; 150
 4a6:	11 c0       	rjmp	.+34     	; 0x4ca <__floatsisf+0x6a>
 4a8:	77 23       	and	r23, r23
 4aa:	21 f0       	breq	.+8      	; 0x4b4 <__floatsisf+0x54>
 4ac:	9e e8       	ldi	r25, 0x8E	; 142
 4ae:	87 2f       	mov	r24, r23
 4b0:	76 2f       	mov	r23, r22
 4b2:	05 c0       	rjmp	.+10     	; 0x4be <__floatsisf+0x5e>
 4b4:	66 23       	and	r22, r22
 4b6:	71 f0       	breq	.+28     	; 0x4d4 <__floatsisf+0x74>
 4b8:	96 e8       	ldi	r25, 0x86	; 134
 4ba:	86 2f       	mov	r24, r22
 4bc:	70 e0       	ldi	r23, 0x00	; 0
 4be:	60 e0       	ldi	r22, 0x00	; 0
 4c0:	2a f0       	brmi	.+10     	; 0x4cc <__floatsisf+0x6c>
 4c2:	9a 95       	dec	r25
 4c4:	66 0f       	add	r22, r22
 4c6:	77 1f       	adc	r23, r23
 4c8:	88 1f       	adc	r24, r24
 4ca:	da f7       	brpl	.-10     	; 0x4c2 <__floatsisf+0x62>
 4cc:	88 0f       	add	r24, r24
 4ce:	96 95       	lsr	r25
 4d0:	87 95       	ror	r24
 4d2:	97 f9       	bld	r25, 7
 4d4:	08 95       	ret

000004d6 <__fp_inf>:
 4d6:	97 f9       	bld	r25, 7
 4d8:	9f 67       	ori	r25, 0x7F	; 127
 4da:	80 e8       	ldi	r24, 0x80	; 128
 4dc:	70 e0       	ldi	r23, 0x00	; 0
 4de:	60 e0       	ldi	r22, 0x00	; 0
 4e0:	08 95       	ret

000004e2 <__fp_nan>:
 4e2:	9f ef       	ldi	r25, 0xFF	; 255
 4e4:	80 ec       	ldi	r24, 0xC0	; 192
 4e6:	08 95       	ret

000004e8 <__fp_pscA>:
 4e8:	00 24       	eor	r0, r0
 4ea:	0a 94       	dec	r0
 4ec:	16 16       	cp	r1, r22
 4ee:	17 06       	cpc	r1, r23
 4f0:	18 06       	cpc	r1, r24
 4f2:	09 06       	cpc	r0, r25
 4f4:	08 95       	ret

000004f6 <__fp_pscB>:
 4f6:	00 24       	eor	r0, r0
 4f8:	0a 94       	dec	r0
 4fa:	12 16       	cp	r1, r18
 4fc:	13 06       	cpc	r1, r19
 4fe:	14 06       	cpc	r1, r20
 500:	05 06       	cpc	r0, r21
 502:	08 95       	ret

00000504 <__fp_round>:
 504:	09 2e       	mov	r0, r25
 506:	03 94       	inc	r0
 508:	00 0c       	add	r0, r0
 50a:	11 f4       	brne	.+4      	; 0x510 <__fp_round+0xc>
 50c:	88 23       	and	r24, r24
 50e:	52 f0       	brmi	.+20     	; 0x524 <__fp_round+0x20>
 510:	bb 0f       	add	r27, r27
 512:	40 f4       	brcc	.+16     	; 0x524 <__fp_round+0x20>
 514:	bf 2b       	or	r27, r31
 516:	11 f4       	brne	.+4      	; 0x51c <__fp_round+0x18>
 518:	60 ff       	sbrs	r22, 0
 51a:	04 c0       	rjmp	.+8      	; 0x524 <__fp_round+0x20>
 51c:	6f 5f       	subi	r22, 0xFF	; 255
 51e:	7f 4f       	sbci	r23, 0xFF	; 255
 520:	8f 4f       	sbci	r24, 0xFF	; 255
 522:	9f 4f       	sbci	r25, 0xFF	; 255
 524:	08 95       	ret

00000526 <__fp_split3>:
 526:	57 fd       	sbrc	r21, 7
 528:	90 58       	subi	r25, 0x80	; 128
 52a:	44 0f       	add	r20, r20
 52c:	55 1f       	adc	r21, r21
 52e:	59 f0       	breq	.+22     	; 0x546 <__fp_splitA+0x10>
 530:	5f 3f       	cpi	r21, 0xFF	; 255
 532:	71 f0       	breq	.+28     	; 0x550 <__fp_splitA+0x1a>
 534:	47 95       	ror	r20

00000536 <__fp_splitA>:
 536:	88 0f       	add	r24, r24
 538:	97 fb       	bst	r25, 7
 53a:	99 1f       	adc	r25, r25
 53c:	61 f0       	breq	.+24     	; 0x556 <__fp_splitA+0x20>
 53e:	9f 3f       	cpi	r25, 0xFF	; 255
 540:	79 f0       	breq	.+30     	; 0x560 <__fp_splitA+0x2a>
 542:	87 95       	ror	r24
 544:	08 95       	ret
 546:	12 16       	cp	r1, r18
 548:	13 06       	cpc	r1, r19
 54a:	14 06       	cpc	r1, r20
 54c:	55 1f       	adc	r21, r21
 54e:	f2 cf       	rjmp	.-28     	; 0x534 <__fp_split3+0xe>
 550:	46 95       	lsr	r20
 552:	f1 df       	rcall	.-30     	; 0x536 <__fp_splitA>
 554:	08 c0       	rjmp	.+16     	; 0x566 <__fp_splitA+0x30>
 556:	16 16       	cp	r1, r22
 558:	17 06       	cpc	r1, r23
 55a:	18 06       	cpc	r1, r24
 55c:	99 1f       	adc	r25, r25
 55e:	f1 cf       	rjmp	.-30     	; 0x542 <__fp_splitA+0xc>
 560:	86 95       	lsr	r24
 562:	71 05       	cpc	r23, r1
 564:	61 05       	cpc	r22, r1
 566:	08 94       	sec
 568:	08 95       	ret

0000056a <__fp_zero>:
 56a:	e8 94       	clt

0000056c <__fp_szero>:
 56c:	bb 27       	eor	r27, r27
 56e:	66 27       	eor	r22, r22
 570:	77 27       	eor	r23, r23
 572:	cb 01       	movw	r24, r22
 574:	97 f9       	bld	r25, 7
 576:	08 95       	ret

00000578 <__mulsf3>:
 578:	0b d0       	rcall	.+22     	; 0x590 <__mulsf3x>
 57a:	c4 cf       	rjmp	.-120    	; 0x504 <__fp_round>
 57c:	b5 df       	rcall	.-150    	; 0x4e8 <__fp_pscA>
 57e:	28 f0       	brcs	.+10     	; 0x58a <__mulsf3+0x12>
 580:	ba df       	rcall	.-140    	; 0x4f6 <__fp_pscB>
 582:	18 f0       	brcs	.+6      	; 0x58a <__mulsf3+0x12>
 584:	95 23       	and	r25, r21
 586:	09 f0       	breq	.+2      	; 0x58a <__mulsf3+0x12>
 588:	a6 cf       	rjmp	.-180    	; 0x4d6 <__fp_inf>
 58a:	ab cf       	rjmp	.-170    	; 0x4e2 <__fp_nan>
 58c:	11 24       	eor	r1, r1
 58e:	ee cf       	rjmp	.-36     	; 0x56c <__fp_szero>

00000590 <__mulsf3x>:
 590:	ca df       	rcall	.-108    	; 0x526 <__fp_split3>
 592:	a0 f3       	brcs	.-24     	; 0x57c <__mulsf3+0x4>

00000594 <__mulsf3_pse>:
 594:	95 9f       	mul	r25, r21
 596:	d1 f3       	breq	.-12     	; 0x58c <__mulsf3+0x14>
 598:	95 0f       	add	r25, r21
 59a:	50 e0       	ldi	r21, 0x00	; 0
 59c:	55 1f       	adc	r21, r21
 59e:	62 9f       	mul	r22, r18
 5a0:	f0 01       	movw	r30, r0
 5a2:	72 9f       	mul	r23, r18
 5a4:	bb 27       	eor	r27, r27
 5a6:	f0 0d       	add	r31, r0
 5a8:	b1 1d       	adc	r27, r1
 5aa:	63 9f       	mul	r22, r19
 5ac:	aa 27       	eor	r26, r26
 5ae:	f0 0d       	add	r31, r0
 5b0:	b1 1d       	adc	r27, r1
 5b2:	aa 1f       	adc	r26, r26
 5b4:	64 9f       	mul	r22, r20
 5b6:	66 27       	eor	r22, r22
 5b8:	b0 0d       	add	r27, r0
 5ba:	a1 1d       	adc	r26, r1
 5bc:	66 1f       	adc	r22, r22
 5be:	82 9f       	mul	r24, r18
 5c0:	22 27       	eor	r18, r18
 5c2:	b0 0d       	add	r27, r0
 5c4:	a1 1d       	adc	r26, r1
 5c6:	62 1f       	adc	r22, r18
 5c8:	73 9f       	mul	r23, r19
 5ca:	b0 0d       	add	r27, r0
 5cc:	a1 1d       	adc	r26, r1
 5ce:	62 1f       	adc	r22, r18
 5d0:	83 9f       	mul	r24, r19
 5d2:	a0 0d       	add	r26, r0
 5d4:	61 1d       	adc	r22, r1
 5d6:	22 1f       	adc	r18, r18
 5d8:	74 9f       	mul	r23, r20
 5da:	33 27       	eor	r19, r19
 5dc:	a0 0d       	add	r26, r0
 5de:	61 1d       	adc	r22, r1
 5e0:	23 1f       	adc	r18, r19
 5e2:	84 9f       	mul	r24, r20
 5e4:	60 0d       	add	r22, r0
 5e6:	21 1d       	adc	r18, r1
 5e8:	82 2f       	mov	r24, r18
 5ea:	76 2f       	mov	r23, r22
 5ec:	6a 2f       	mov	r22, r26
 5ee:	11 24       	eor	r1, r1
 5f0:	9f 57       	subi	r25, 0x7F	; 127
 5f2:	50 40       	sbci	r21, 0x00	; 0
 5f4:	8a f0       	brmi	.+34     	; 0x618 <__mulsf3_pse+0x84>
 5f6:	e1 f0       	breq	.+56     	; 0x630 <__mulsf3_pse+0x9c>
 5f8:	88 23       	and	r24, r24
 5fa:	4a f0       	brmi	.+18     	; 0x60e <__mulsf3_pse+0x7a>
 5fc:	ee 0f       	add	r30, r30
 5fe:	ff 1f       	adc	r31, r31
 600:	bb 1f       	adc	r27, r27
 602:	66 1f       	adc	r22, r22
 604:	77 1f       	adc	r23, r23
 606:	88 1f       	adc	r24, r24
 608:	91 50       	subi	r25, 0x01	; 1
 60a:	50 40       	sbci	r21, 0x00	; 0
 60c:	a9 f7       	brne	.-22     	; 0x5f8 <__mulsf3_pse+0x64>
 60e:	9e 3f       	cpi	r25, 0xFE	; 254
 610:	51 05       	cpc	r21, r1
 612:	70 f0       	brcs	.+28     	; 0x630 <__mulsf3_pse+0x9c>
 614:	60 cf       	rjmp	.-320    	; 0x4d6 <__fp_inf>
 616:	aa cf       	rjmp	.-172    	; 0x56c <__fp_szero>
 618:	5f 3f       	cpi	r21, 0xFF	; 255
 61a:	ec f3       	brlt	.-6      	; 0x616 <__mulsf3_pse+0x82>
 61c:	98 3e       	cpi	r25, 0xE8	; 232
 61e:	dc f3       	brlt	.-10     	; 0x616 <__mulsf3_pse+0x82>
 620:	86 95       	lsr	r24
 622:	77 95       	ror	r23
 624:	67 95       	ror	r22
 626:	b7 95       	ror	r27
 628:	f7 95       	ror	r31
 62a:	e7 95       	ror	r30
 62c:	9f 5f       	subi	r25, 0xFF	; 255
 62e:	c1 f7       	brne	.-16     	; 0x620 <__mulsf3_pse+0x8c>
 630:	fe 2b       	or	r31, r30
 632:	88 0f       	add	r24, r24
 634:	91 1d       	adc	r25, r1
 636:	96 95       	lsr	r25
 638:	87 95       	ror	r24
 63a:	97 f9       	bld	r25, 7
 63c:	08 95       	ret

0000063e <__divmodhi4>:
 63e:	97 fb       	bst	r25, 7
 640:	07 2e       	mov	r0, r23
 642:	16 f4       	brtc	.+4      	; 0x648 <__divmodhi4+0xa>
 644:	00 94       	com	r0
 646:	06 d0       	rcall	.+12     	; 0x654 <__divmodhi4_neg1>
 648:	77 fd       	sbrc	r23, 7
 64a:	08 d0       	rcall	.+16     	; 0x65c <__divmodhi4_neg2>
 64c:	0b d0       	rcall	.+22     	; 0x664 <__udivmodhi4>
 64e:	07 fc       	sbrc	r0, 7
 650:	05 d0       	rcall	.+10     	; 0x65c <__divmodhi4_neg2>
 652:	3e f4       	brtc	.+14     	; 0x662 <__divmodhi4_exit>

00000654 <__divmodhi4_neg1>:
 654:	90 95       	com	r25
 656:	81 95       	neg	r24
 658:	9f 4f       	sbci	r25, 0xFF	; 255
 65a:	08 95       	ret

0000065c <__divmodhi4_neg2>:
 65c:	70 95       	com	r23
 65e:	61 95       	neg	r22
 660:	7f 4f       	sbci	r23, 0xFF	; 255

00000662 <__divmodhi4_exit>:
 662:	08 95       	ret

00000664 <__udivmodhi4>:
 664:	aa 1b       	sub	r26, r26
 666:	bb 1b       	sub	r27, r27
 668:	51 e1       	ldi	r21, 0x11	; 17
 66a:	07 c0       	rjmp	.+14     	; 0x67a <__udivmodhi4_ep>

0000066c <__udivmodhi4_loop>:
 66c:	aa 1f       	adc	r26, r26
 66e:	bb 1f       	adc	r27, r27
 670:	a6 17       	cp	r26, r22
 672:	b7 07       	cpc	r27, r23
 674:	10 f0       	brcs	.+4      	; 0x67a <__udivmodhi4_ep>
 676:	a6 1b       	sub	r26, r22
 678:	b7 0b       	sbc	r27, r23

0000067a <__udivmodhi4_ep>:
 67a:	88 1f       	adc	r24, r24
 67c:	99 1f       	adc	r25, r25
 67e:	5a 95       	dec	r21
 680:	a9 f7       	brne	.-22     	; 0x66c <__udivmodhi4_loop>
 682:	80 95       	com	r24
 684:	90 95       	com	r25
 686:	bc 01       	movw	r22, r24
 688:	cd 01       	movw	r24, r26
 68a:	08 95       	ret

0000068c <_exit>:
 68c:	f8 94       	cli

0000068e <__stop_program>:
 68e:	ff cf       	rjmp	.-2      	; 0x68e <__stop_program>
