
DA3B.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800100  000005a2  00000636  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000005a2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  0080010e  0080010e  00000644  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000644  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000674  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000050  00000000  00000000  000006b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b1e  00000000  00000000  00000704  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009e1  00000000  00000000  00001222  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005f3  00000000  00000000  00001c03  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000dc  00000000  00000000  000021f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000082d2  00000000  00000000  000022d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001ab  00000000  00000000  0000a5a6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  0000a751  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  000004f8  00000000  00000000  0000a791  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	59 c0       	rjmp	.+178    	; 0xb4 <__ctors_end>
   2:	00 00       	nop
   4:	72 c0       	rjmp	.+228    	; 0xea <__bad_interrupt>
   6:	00 00       	nop
   8:	70 c0       	rjmp	.+224    	; 0xea <__bad_interrupt>
   a:	00 00       	nop
   c:	6e c0       	rjmp	.+220    	; 0xea <__bad_interrupt>
   e:	00 00       	nop
  10:	6c c0       	rjmp	.+216    	; 0xea <__bad_interrupt>
  12:	00 00       	nop
  14:	6a c0       	rjmp	.+212    	; 0xea <__bad_interrupt>
  16:	00 00       	nop
  18:	68 c0       	rjmp	.+208    	; 0xea <__bad_interrupt>
  1a:	00 00       	nop
  1c:	66 c0       	rjmp	.+204    	; 0xea <__bad_interrupt>
  1e:	00 00       	nop
  20:	64 c0       	rjmp	.+200    	; 0xea <__bad_interrupt>
  22:	00 00       	nop
  24:	62 c0       	rjmp	.+196    	; 0xea <__bad_interrupt>
  26:	00 00       	nop
  28:	60 c0       	rjmp	.+192    	; 0xea <__bad_interrupt>
  2a:	00 00       	nop
  2c:	5e c0       	rjmp	.+188    	; 0xea <__bad_interrupt>
  2e:	00 00       	nop
  30:	5c c0       	rjmp	.+184    	; 0xea <__bad_interrupt>
  32:	00 00       	nop
  34:	5a c0       	rjmp	.+180    	; 0xea <__bad_interrupt>
  36:	00 00       	nop
  38:	58 c0       	rjmp	.+176    	; 0xea <__bad_interrupt>
  3a:	00 00       	nop
  3c:	56 c0       	rjmp	.+172    	; 0xea <__bad_interrupt>
  3e:	00 00       	nop
  40:	90 c0       	rjmp	.+288    	; 0x162 <__vector_16>
  42:	00 00       	nop
  44:	52 c0       	rjmp	.+164    	; 0xea <__bad_interrupt>
  46:	00 00       	nop
  48:	50 c0       	rjmp	.+160    	; 0xea <__bad_interrupt>
  4a:	00 00       	nop
  4c:	4e c0       	rjmp	.+156    	; 0xea <__bad_interrupt>
  4e:	00 00       	nop
  50:	4c c0       	rjmp	.+152    	; 0xea <__bad_interrupt>
  52:	00 00       	nop
  54:	4a c0       	rjmp	.+148    	; 0xea <__bad_interrupt>
  56:	00 00       	nop
  58:	48 c0       	rjmp	.+144    	; 0xea <__bad_interrupt>
  5a:	00 00       	nop
  5c:	46 c0       	rjmp	.+140    	; 0xea <__bad_interrupt>
  5e:	00 00       	nop
  60:	44 c0       	rjmp	.+136    	; 0xea <__bad_interrupt>
  62:	00 00       	nop
  64:	42 c0       	rjmp	.+132    	; 0xea <__bad_interrupt>
  66:	00 00       	nop
  68:	40 c0       	rjmp	.+128    	; 0xea <__bad_interrupt>
  6a:	00 00       	nop
  6c:	3e c0       	rjmp	.+124    	; 0xea <__bad_interrupt>
  6e:	00 00       	nop
  70:	3c c0       	rjmp	.+120    	; 0xea <__bad_interrupt>
  72:	00 00       	nop
  74:	3a c0       	rjmp	.+116    	; 0xea <__bad_interrupt>
  76:	00 00       	nop
  78:	38 c0       	rjmp	.+112    	; 0xea <__bad_interrupt>
  7a:	00 00       	nop
  7c:	36 c0       	rjmp	.+108    	; 0xea <__bad_interrupt>
  7e:	00 00       	nop
  80:	34 c0       	rjmp	.+104    	; 0xea <__bad_interrupt>
  82:	00 00       	nop
  84:	32 c0       	rjmp	.+100    	; 0xea <__bad_interrupt>
  86:	00 00       	nop
  88:	30 c0       	rjmp	.+96     	; 0xea <__bad_interrupt>
  8a:	00 00       	nop
  8c:	2e c0       	rjmp	.+92     	; 0xea <__bad_interrupt>
  8e:	00 00       	nop
  90:	2c c0       	rjmp	.+88     	; 0xea <__bad_interrupt>
  92:	00 00       	nop
  94:	2a c0       	rjmp	.+84     	; 0xea <__bad_interrupt>
  96:	00 00       	nop
  98:	28 c0       	rjmp	.+80     	; 0xea <__bad_interrupt>
  9a:	00 00       	nop
  9c:	26 c0       	rjmp	.+76     	; 0xea <__bad_interrupt>
  9e:	00 00       	nop
  a0:	24 c0       	rjmp	.+72     	; 0xea <__bad_interrupt>
  a2:	00 00       	nop
  a4:	22 c0       	rjmp	.+68     	; 0xea <__bad_interrupt>
  a6:	00 00       	nop
  a8:	20 c0       	rjmp	.+64     	; 0xea <__bad_interrupt>
  aa:	00 00       	nop
  ac:	1e c0       	rjmp	.+60     	; 0xea <__bad_interrupt>
  ae:	00 00       	nop
  b0:	1c c0       	rjmp	.+56     	; 0xea <__bad_interrupt>
	...

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	e2 ea       	ldi	r30, 0xA2	; 162
  c8:	f5 e0       	ldi	r31, 0x05	; 5
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	ae 30       	cpi	r26, 0x0E	; 14
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
  d6:	21 e0       	ldi	r18, 0x01	; 1
  d8:	ae e0       	ldi	r26, 0x0E	; 14
  da:	b1 e0       	ldi	r27, 0x01	; 1
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
  de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
  e0:	af 30       	cpi	r26, 0x0F	; 15
  e2:	b2 07       	cpc	r27, r18
  e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
  e6:	2b d0       	rcall	.+86     	; 0x13e <main>
  e8:	5a c2       	rjmp	.+1204   	; 0x59e <_exit>

000000ea <__bad_interrupt>:
  ea:	8a cf       	rjmp	.-236    	; 0x0 <__vectors>

000000ec <USART_init>:

unsigned char USART_receive(void)
{
	while(!(UCSR0A & (1 << RXC0)));
	return UDR0;
}
  ec:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
  f0:	87 e6       	ldi	r24, 0x67	; 103
  f2:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
  f6:	88 e1       	ldi	r24, 0x18	; 24
  f8:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
  fc:	86 e0       	ldi	r24, 0x06	; 6
  fe:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 102:	08 95       	ret

00000104 <USART_transmit>:

void USART_transmit(unsigned char data)
{
	while(!(UCSR0A & (1 << UDRE0)));
 104:	e0 ec       	ldi	r30, 0xC0	; 192
 106:	f0 e0       	ldi	r31, 0x00	; 0
 108:	90 81       	ld	r25, Z
 10a:	95 ff       	sbrs	r25, 5
 10c:	fd cf       	rjmp	.-6      	; 0x108 <USART_transmit+0x4>
	UDR0 = data;
 10e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 112:	08 95       	ret

00000114 <USART_putstring>:
}

void USART_putstring(char* StringPtr)
{
 114:	cf 93       	push	r28
 116:	df 93       	push	r29
 118:	ec 01       	movw	r28, r24
	while(*StringPtr != 0x00)
 11a:	88 81       	ld	r24, Y
 11c:	88 23       	and	r24, r24
 11e:	29 f0       	breq	.+10     	; 0x12a <USART_putstring+0x16>
 120:	21 96       	adiw	r28, 0x01	; 1
	{
		USART_transmit(*StringPtr);
 122:	f0 df       	rcall	.-32     	; 0x104 <USART_transmit>
	UDR0 = data;
}

void USART_putstring(char* StringPtr)
{
	while(*StringPtr != 0x00)
 124:	89 91       	ld	r24, Y+
 126:	81 11       	cpse	r24, r1
 128:	fc cf       	rjmp	.-8      	; 0x122 <USART_putstring+0xe>
	{
		USART_transmit(*StringPtr);
		StringPtr++;
	}
}
 12a:	df 91       	pop	r29
 12c:	cf 91       	pop	r28
 12e:	08 95       	ret

00000130 <ADC_init>:

void ADC_init (void)
{
	ADMUX = (0<<REFS1)|					
 130:	84 e4       	ldi	r24, 0x44	; 68
 132:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	(1<<REFS0)|							
	(0<<ADLAR)|							
	(1<<MUX2)|							
	(0<<MUX1)|	// ADC5 PC5
	(0<<MUX0);
	ADCSRA = (1<<ADEN)|					
 136:	83 e8       	ldi	r24, 0x83	; 131
 138:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 13c:	08 95       	ret

0000013e <main>:
uint8_t OVFLOWLIMIT = 250; //set the over flow limit for 1 sec delay


int main(void)
{
	USART_init(); //initialize USART
 13e:	d6 df       	rcall	.-84     	; 0xec <USART_init>
	ADC_init (); //initialize ADC
 140:	f7 df       	rcall	.-18     	; 0x130 <ADC_init>
 142:	81 e0       	ldi	r24, 0x01	; 1
	USART_putstring("Connected\r\n");
 144:	91 e0       	ldi	r25, 0x01	; 1
 146:	e6 df       	rcall	.-52     	; 0x114 <USART_putstring>
 148:	14 bc       	out	0x24, r1	; 36
TCCR0A = 0x00; //set normal operation
 14a:	85 b5       	in	r24, 0x25	; 37
	TCCR0B |= (1 << CS02); //set prescalar to 256
 14c:	84 60       	ori	r24, 0x04	; 4
 14e:	85 bd       	out	0x25, r24	; 37
 150:	86 e0       	ldi	r24, 0x06	; 6
	TCNT0 = 6; 
 152:	86 bd       	out	0x26, r24	; 38
 154:	ee e6       	ldi	r30, 0x6E	; 110
	TIMSK0 |= (1 << TOIE0);
 156:	f0 e0       	ldi	r31, 0x00	; 0
 158:	80 81       	ld	r24, Z
 15a:	81 60       	ori	r24, 0x01	; 1
 15c:	80 83       	st	Z, r24
 15e:	78 94       	sei
	sei(); //set interrupt
 160:	ff cf       	rjmp	.-2      	; 0x160 <main+0x22>

00000162 <__vector_16>:
 162:	1f 92       	push	r1
	(1<<ADPS1)|
	(1<<ADPS0);
	
}
ISR (TIMER0_OVF_vect)
{
 164:	0f 92       	push	r0
 166:	0f b6       	in	r0, 0x3f	; 63
 168:	0f 92       	push	r0
 16a:	11 24       	eor	r1, r1
 16c:	2f 93       	push	r18
 16e:	3f 93       	push	r19
 170:	4f 93       	push	r20
 172:	5f 93       	push	r21
 174:	6f 93       	push	r22
 176:	7f 93       	push	r23
 178:	8f 93       	push	r24
 17a:	9f 93       	push	r25
 17c:	af 93       	push	r26
 17e:	bf 93       	push	r27
 180:	cf 93       	push	r28
 182:	ef 93       	push	r30
 184:	ff 93       	push	r31
	OVFLOWCOUNT++; 
 186:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <__data_end>
 18a:	8f 5f       	subi	r24, 0xFF	; 255
 18c:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <__data_end>
	if (OVFLOWCOUNT == OVFLOWLIMIT) 
 190:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <OVFLOWLIMIT>
 194:	89 13       	cpse	r24, r25
 196:	3e c0       	rjmp	.+124    	; 0x214 <__vector_16+0xb2>
	{
		ADCSRA|=(1<<ADSC);
 198:	ea e7       	ldi	r30, 0x7A	; 122
 19a:	f0 e0       	ldi	r31, 0x00	; 0
 19c:	80 81       	ld	r24, Z
 19e:	80 64       	ori	r24, 0x40	; 64
 1a0:	80 83       	st	Z, r24
		while((ADCSRA&(1<<ADIF))==0);
 1a2:	80 81       	ld	r24, Z
 1a4:	84 ff       	sbrs	r24, 4
 1a6:	fd cf       	rjmp	.-6      	; 0x1a2 <__vector_16+0x40>
		
		ADCSRA |= (1<<ADIF);
 1a8:	ea e7       	ldi	r30, 0x7A	; 122
 1aa:	f0 e0       	ldi	r31, 0x00	; 0
 1ac:	80 81       	ld	r24, Z
 1ae:	80 61       	ori	r24, 0x10	; 16
 1b0:	80 83       	st	Z, r24
//take value from ADC and transmit it
		int var = ADCL;
 1b2:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
		var = var | (ADCH<<8);
 1b6:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
		var = (var/1024.0) * 5000/10;
 1ba:	70 e0       	ldi	r23, 0x00	; 0
 1bc:	78 2b       	or	r23, r24
 1be:	07 2e       	mov	r0, r23
 1c0:	00 0c       	add	r0, r0
 1c2:	88 0b       	sbc	r24, r24
 1c4:	99 0b       	sbc	r25, r25
 1c6:	d5 d0       	rcall	.+426    	; 0x372 <__floatsisf>
 1c8:	20 e0       	ldi	r18, 0x00	; 0
 1ca:	30 e0       	ldi	r19, 0x00	; 0
 1cc:	40 e8       	ldi	r20, 0x80	; 128
 1ce:	5a e3       	ldi	r21, 0x3A	; 58
 1d0:	5c d1       	rcall	.+696    	; 0x48a <__mulsf3>
 1d2:	20 e0       	ldi	r18, 0x00	; 0
 1d4:	30 e4       	ldi	r19, 0x40	; 64
 1d6:	4c e9       	ldi	r20, 0x9C	; 156
 1d8:	55 e4       	ldi	r21, 0x45	; 69
 1da:	57 d1       	rcall	.+686    	; 0x48a <__mulsf3>
 1dc:	20 e0       	ldi	r18, 0x00	; 0
 1de:	30 e0       	ldi	r19, 0x00	; 0
 1e0:	40 e2       	ldi	r20, 0x20	; 32
 1e2:	51 e4       	ldi	r21, 0x41	; 65
 1e4:	2b d0       	rcall	.+86     	; 0x23c <__divsf3>
		var = (var*2)+32; 
 1e6:	92 d0       	rcall	.+292    	; 0x30c <__fixsfsi>
 1e8:	60 5f       	subi	r22, 0xF0	; 240
 1ea:	7f 4f       	sbci	r23, 0xFF	; 255
 1ec:	cb 01       	movw	r24, r22
 1ee:	88 0f       	add	r24, r24
 1f0:	99 1f       	adc	r25, r25
		var = var % 100;
 1f2:	64 e6       	ldi	r22, 0x64	; 100
 1f4:	70 e0       	ldi	r23, 0x00	; 0
 1f6:	ac d1       	rcall	.+856    	; 0x550 <__divmodhi4>
		USART_transmit((var/10)+'0');
 1f8:	6a e0       	ldi	r22, 0x0A	; 10
 1fa:	70 e0       	ldi	r23, 0x00	; 0
 1fc:	a9 d1       	rcall	.+850    	; 0x550 <__divmodhi4>
 1fe:	c8 2f       	mov	r28, r24
 200:	80 e3       	ldi	r24, 0x30	; 48
 202:	86 0f       	add	r24, r22
		var = var % 10;
		USART_transmit((var)+'0');
 204:	7f df       	rcall	.-258    	; 0x104 <USART_transmit>
 206:	80 e3       	ldi	r24, 0x30	; 48
 208:	8c 0f       	add	r24, r28
 20a:	7c df       	rcall	.-264    	; 0x104 <USART_transmit>
		USART_transmit('\n');
 20c:	8a e0       	ldi	r24, 0x0A	; 10
 20e:	7a df       	rcall	.-268    	; 0x104 <USART_transmit>
 210:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <__data_end>
		OVFLOWCOUNT = 0; 
 214:	86 e0       	ldi	r24, 0x06	; 6
	}
	TCNT0 = 6; 
 216:	86 bd       	out	0x26, r24	; 38
 218:	ff 91       	pop	r31
}
 21a:	ef 91       	pop	r30
 21c:	cf 91       	pop	r28
 21e:	bf 91       	pop	r27
 220:	af 91       	pop	r26
 222:	9f 91       	pop	r25
 224:	8f 91       	pop	r24
 226:	7f 91       	pop	r23
 228:	6f 91       	pop	r22
 22a:	5f 91       	pop	r21
 22c:	4f 91       	pop	r20
 22e:	3f 91       	pop	r19
 230:	2f 91       	pop	r18
 232:	0f 90       	pop	r0
 234:	0f be       	out	0x3f, r0	; 63
 236:	0f 90       	pop	r0
 238:	1f 90       	pop	r1
 23a:	18 95       	reti

0000023c <__divsf3>:
 23c:	0c d0       	rcall	.+24     	; 0x256 <__divsf3x>
 23e:	eb c0       	rjmp	.+470    	; 0x416 <__fp_round>
 240:	e3 d0       	rcall	.+454    	; 0x408 <__fp_pscB>
 242:	40 f0       	brcs	.+16     	; 0x254 <__divsf3+0x18>
 244:	da d0       	rcall	.+436    	; 0x3fa <__fp_pscA>
 246:	30 f0       	brcs	.+12     	; 0x254 <__divsf3+0x18>
 248:	21 f4       	brne	.+8      	; 0x252 <__divsf3+0x16>
 24a:	5f 3f       	cpi	r21, 0xFF	; 255
 24c:	19 f0       	breq	.+6      	; 0x254 <__divsf3+0x18>
 24e:	cc c0       	rjmp	.+408    	; 0x3e8 <__fp_inf>
 250:	51 11       	cpse	r21, r1
 252:	15 c1       	rjmp	.+554    	; 0x47e <__fp_szero>
 254:	cf c0       	rjmp	.+414    	; 0x3f4 <__fp_nan>

00000256 <__divsf3x>:
 256:	f0 d0       	rcall	.+480    	; 0x438 <__fp_split3>
 258:	98 f3       	brcs	.-26     	; 0x240 <__divsf3+0x4>

0000025a <__divsf3_pse>:
 25a:	99 23       	and	r25, r25
 25c:	c9 f3       	breq	.-14     	; 0x250 <__divsf3+0x14>
 25e:	55 23       	and	r21, r21
 260:	b1 f3       	breq	.-20     	; 0x24e <__divsf3+0x12>
 262:	95 1b       	sub	r25, r21
 264:	55 0b       	sbc	r21, r21
 266:	bb 27       	eor	r27, r27
 268:	aa 27       	eor	r26, r26
 26a:	62 17       	cp	r22, r18
 26c:	73 07       	cpc	r23, r19
 26e:	84 07       	cpc	r24, r20
 270:	38 f0       	brcs	.+14     	; 0x280 <__divsf3_pse+0x26>
 272:	9f 5f       	subi	r25, 0xFF	; 255
 274:	5f 4f       	sbci	r21, 0xFF	; 255
 276:	22 0f       	add	r18, r18
 278:	33 1f       	adc	r19, r19
 27a:	44 1f       	adc	r20, r20
 27c:	aa 1f       	adc	r26, r26
 27e:	a9 f3       	breq	.-22     	; 0x26a <__divsf3_pse+0x10>
 280:	33 d0       	rcall	.+102    	; 0x2e8 <__divsf3_pse+0x8e>
 282:	0e 2e       	mov	r0, r30
 284:	3a f0       	brmi	.+14     	; 0x294 <__divsf3_pse+0x3a>
 286:	e0 e8       	ldi	r30, 0x80	; 128
 288:	30 d0       	rcall	.+96     	; 0x2ea <__divsf3_pse+0x90>
 28a:	91 50       	subi	r25, 0x01	; 1
 28c:	50 40       	sbci	r21, 0x00	; 0
 28e:	e6 95       	lsr	r30
 290:	00 1c       	adc	r0, r0
 292:	ca f7       	brpl	.-14     	; 0x286 <__divsf3_pse+0x2c>
 294:	29 d0       	rcall	.+82     	; 0x2e8 <__divsf3_pse+0x8e>
 296:	fe 2f       	mov	r31, r30
 298:	27 d0       	rcall	.+78     	; 0x2e8 <__divsf3_pse+0x8e>
 29a:	66 0f       	add	r22, r22
 29c:	77 1f       	adc	r23, r23
 29e:	88 1f       	adc	r24, r24
 2a0:	bb 1f       	adc	r27, r27
 2a2:	26 17       	cp	r18, r22
 2a4:	37 07       	cpc	r19, r23
 2a6:	48 07       	cpc	r20, r24
 2a8:	ab 07       	cpc	r26, r27
 2aa:	b0 e8       	ldi	r27, 0x80	; 128
 2ac:	09 f0       	breq	.+2      	; 0x2b0 <__divsf3_pse+0x56>
 2ae:	bb 0b       	sbc	r27, r27
 2b0:	80 2d       	mov	r24, r0
 2b2:	bf 01       	movw	r22, r30
 2b4:	ff 27       	eor	r31, r31
 2b6:	93 58       	subi	r25, 0x83	; 131
 2b8:	5f 4f       	sbci	r21, 0xFF	; 255
 2ba:	2a f0       	brmi	.+10     	; 0x2c6 <__divsf3_pse+0x6c>
 2bc:	9e 3f       	cpi	r25, 0xFE	; 254
 2be:	51 05       	cpc	r21, r1
 2c0:	68 f0       	brcs	.+26     	; 0x2dc <__divsf3_pse+0x82>
 2c2:	92 c0       	rjmp	.+292    	; 0x3e8 <__fp_inf>
 2c4:	dc c0       	rjmp	.+440    	; 0x47e <__fp_szero>
 2c6:	5f 3f       	cpi	r21, 0xFF	; 255
 2c8:	ec f3       	brlt	.-6      	; 0x2c4 <__divsf3_pse+0x6a>
 2ca:	98 3e       	cpi	r25, 0xE8	; 232
 2cc:	dc f3       	brlt	.-10     	; 0x2c4 <__divsf3_pse+0x6a>
 2ce:	86 95       	lsr	r24
 2d0:	77 95       	ror	r23
 2d2:	67 95       	ror	r22
 2d4:	b7 95       	ror	r27
 2d6:	f7 95       	ror	r31
 2d8:	9f 5f       	subi	r25, 0xFF	; 255
 2da:	c9 f7       	brne	.-14     	; 0x2ce <__divsf3_pse+0x74>
 2dc:	88 0f       	add	r24, r24
 2de:	91 1d       	adc	r25, r1
 2e0:	96 95       	lsr	r25
 2e2:	87 95       	ror	r24
 2e4:	97 f9       	bld	r25, 7
 2e6:	08 95       	ret
 2e8:	e1 e0       	ldi	r30, 0x01	; 1
 2ea:	66 0f       	add	r22, r22
 2ec:	77 1f       	adc	r23, r23
 2ee:	88 1f       	adc	r24, r24
 2f0:	bb 1f       	adc	r27, r27
 2f2:	62 17       	cp	r22, r18
 2f4:	73 07       	cpc	r23, r19
 2f6:	84 07       	cpc	r24, r20
 2f8:	ba 07       	cpc	r27, r26
 2fa:	20 f0       	brcs	.+8      	; 0x304 <__divsf3_pse+0xaa>
 2fc:	62 1b       	sub	r22, r18
 2fe:	73 0b       	sbc	r23, r19
 300:	84 0b       	sbc	r24, r20
 302:	ba 0b       	sbc	r27, r26
 304:	ee 1f       	adc	r30, r30
 306:	88 f7       	brcc	.-30     	; 0x2ea <__divsf3_pse+0x90>
 308:	e0 95       	com	r30
 30a:	08 95       	ret

0000030c <__fixsfsi>:
 30c:	04 d0       	rcall	.+8      	; 0x316 <__fixunssfsi>
 30e:	68 94       	set
 310:	b1 11       	cpse	r27, r1
 312:	b5 c0       	rjmp	.+362    	; 0x47e <__fp_szero>
 314:	08 95       	ret

00000316 <__fixunssfsi>:
 316:	98 d0       	rcall	.+304    	; 0x448 <__fp_splitA>
 318:	88 f0       	brcs	.+34     	; 0x33c <__fixunssfsi+0x26>
 31a:	9f 57       	subi	r25, 0x7F	; 127
 31c:	90 f0       	brcs	.+36     	; 0x342 <__fixunssfsi+0x2c>
 31e:	b9 2f       	mov	r27, r25
 320:	99 27       	eor	r25, r25
 322:	b7 51       	subi	r27, 0x17	; 23
 324:	a0 f0       	brcs	.+40     	; 0x34e <__fixunssfsi+0x38>
 326:	d1 f0       	breq	.+52     	; 0x35c <__fixunssfsi+0x46>
 328:	66 0f       	add	r22, r22
 32a:	77 1f       	adc	r23, r23
 32c:	88 1f       	adc	r24, r24
 32e:	99 1f       	adc	r25, r25
 330:	1a f0       	brmi	.+6      	; 0x338 <__fixunssfsi+0x22>
 332:	ba 95       	dec	r27
 334:	c9 f7       	brne	.-14     	; 0x328 <__fixunssfsi+0x12>
 336:	12 c0       	rjmp	.+36     	; 0x35c <__fixunssfsi+0x46>
 338:	b1 30       	cpi	r27, 0x01	; 1
 33a:	81 f0       	breq	.+32     	; 0x35c <__fixunssfsi+0x46>
 33c:	9f d0       	rcall	.+318    	; 0x47c <__fp_zero>
 33e:	b1 e0       	ldi	r27, 0x01	; 1
 340:	08 95       	ret
 342:	9c c0       	rjmp	.+312    	; 0x47c <__fp_zero>
 344:	67 2f       	mov	r22, r23
 346:	78 2f       	mov	r23, r24
 348:	88 27       	eor	r24, r24
 34a:	b8 5f       	subi	r27, 0xF8	; 248
 34c:	39 f0       	breq	.+14     	; 0x35c <__fixunssfsi+0x46>
 34e:	b9 3f       	cpi	r27, 0xF9	; 249
 350:	cc f3       	brlt	.-14     	; 0x344 <__fixunssfsi+0x2e>
 352:	86 95       	lsr	r24
 354:	77 95       	ror	r23
 356:	67 95       	ror	r22
 358:	b3 95       	inc	r27
 35a:	d9 f7       	brne	.-10     	; 0x352 <__fixunssfsi+0x3c>
 35c:	3e f4       	brtc	.+14     	; 0x36c <__fixunssfsi+0x56>
 35e:	90 95       	com	r25
 360:	80 95       	com	r24
 362:	70 95       	com	r23
 364:	61 95       	neg	r22
 366:	7f 4f       	sbci	r23, 0xFF	; 255
 368:	8f 4f       	sbci	r24, 0xFF	; 255
 36a:	9f 4f       	sbci	r25, 0xFF	; 255
 36c:	08 95       	ret

0000036e <__floatunsisf>:
 36e:	e8 94       	clt
 370:	09 c0       	rjmp	.+18     	; 0x384 <__floatsisf+0x12>

00000372 <__floatsisf>:
 372:	97 fb       	bst	r25, 7
 374:	3e f4       	brtc	.+14     	; 0x384 <__floatsisf+0x12>
 376:	90 95       	com	r25
 378:	80 95       	com	r24
 37a:	70 95       	com	r23
 37c:	61 95       	neg	r22
 37e:	7f 4f       	sbci	r23, 0xFF	; 255
 380:	8f 4f       	sbci	r24, 0xFF	; 255
 382:	9f 4f       	sbci	r25, 0xFF	; 255
 384:	99 23       	and	r25, r25
 386:	a9 f0       	breq	.+42     	; 0x3b2 <__floatsisf+0x40>
 388:	f9 2f       	mov	r31, r25
 38a:	96 e9       	ldi	r25, 0x96	; 150
 38c:	bb 27       	eor	r27, r27
 38e:	93 95       	inc	r25
 390:	f6 95       	lsr	r31
 392:	87 95       	ror	r24
 394:	77 95       	ror	r23
 396:	67 95       	ror	r22
 398:	b7 95       	ror	r27
 39a:	f1 11       	cpse	r31, r1
 39c:	f8 cf       	rjmp	.-16     	; 0x38e <__floatsisf+0x1c>
 39e:	fa f4       	brpl	.+62     	; 0x3de <__floatsisf+0x6c>
 3a0:	bb 0f       	add	r27, r27
 3a2:	11 f4       	brne	.+4      	; 0x3a8 <__floatsisf+0x36>
 3a4:	60 ff       	sbrs	r22, 0
 3a6:	1b c0       	rjmp	.+54     	; 0x3de <__floatsisf+0x6c>
 3a8:	6f 5f       	subi	r22, 0xFF	; 255
 3aa:	7f 4f       	sbci	r23, 0xFF	; 255
 3ac:	8f 4f       	sbci	r24, 0xFF	; 255
 3ae:	9f 4f       	sbci	r25, 0xFF	; 255
 3b0:	16 c0       	rjmp	.+44     	; 0x3de <__floatsisf+0x6c>
 3b2:	88 23       	and	r24, r24
 3b4:	11 f0       	breq	.+4      	; 0x3ba <__floatsisf+0x48>
 3b6:	96 e9       	ldi	r25, 0x96	; 150
 3b8:	11 c0       	rjmp	.+34     	; 0x3dc <__floatsisf+0x6a>
 3ba:	77 23       	and	r23, r23
 3bc:	21 f0       	breq	.+8      	; 0x3c6 <__floatsisf+0x54>
 3be:	9e e8       	ldi	r25, 0x8E	; 142
 3c0:	87 2f       	mov	r24, r23
 3c2:	76 2f       	mov	r23, r22
 3c4:	05 c0       	rjmp	.+10     	; 0x3d0 <__floatsisf+0x5e>
 3c6:	66 23       	and	r22, r22
 3c8:	71 f0       	breq	.+28     	; 0x3e6 <__floatsisf+0x74>
 3ca:	96 e8       	ldi	r25, 0x86	; 134
 3cc:	86 2f       	mov	r24, r22
 3ce:	70 e0       	ldi	r23, 0x00	; 0
 3d0:	60 e0       	ldi	r22, 0x00	; 0
 3d2:	2a f0       	brmi	.+10     	; 0x3de <__floatsisf+0x6c>
 3d4:	9a 95       	dec	r25
 3d6:	66 0f       	add	r22, r22
 3d8:	77 1f       	adc	r23, r23
 3da:	88 1f       	adc	r24, r24
 3dc:	da f7       	brpl	.-10     	; 0x3d4 <__floatsisf+0x62>
 3de:	88 0f       	add	r24, r24
 3e0:	96 95       	lsr	r25
 3e2:	87 95       	ror	r24
 3e4:	97 f9       	bld	r25, 7
 3e6:	08 95       	ret

000003e8 <__fp_inf>:
 3e8:	97 f9       	bld	r25, 7
 3ea:	9f 67       	ori	r25, 0x7F	; 127
 3ec:	80 e8       	ldi	r24, 0x80	; 128
 3ee:	70 e0       	ldi	r23, 0x00	; 0
 3f0:	60 e0       	ldi	r22, 0x00	; 0
 3f2:	08 95       	ret

000003f4 <__fp_nan>:
 3f4:	9f ef       	ldi	r25, 0xFF	; 255
 3f6:	80 ec       	ldi	r24, 0xC0	; 192
 3f8:	08 95       	ret

000003fa <__fp_pscA>:
 3fa:	00 24       	eor	r0, r0
 3fc:	0a 94       	dec	r0
 3fe:	16 16       	cp	r1, r22
 400:	17 06       	cpc	r1, r23
 402:	18 06       	cpc	r1, r24
 404:	09 06       	cpc	r0, r25
 406:	08 95       	ret

00000408 <__fp_pscB>:
 408:	00 24       	eor	r0, r0
 40a:	0a 94       	dec	r0
 40c:	12 16       	cp	r1, r18
 40e:	13 06       	cpc	r1, r19
 410:	14 06       	cpc	r1, r20
 412:	05 06       	cpc	r0, r21
 414:	08 95       	ret

00000416 <__fp_round>:
 416:	09 2e       	mov	r0, r25
 418:	03 94       	inc	r0
 41a:	00 0c       	add	r0, r0
 41c:	11 f4       	brne	.+4      	; 0x422 <__fp_round+0xc>
 41e:	88 23       	and	r24, r24
 420:	52 f0       	brmi	.+20     	; 0x436 <__fp_round+0x20>
 422:	bb 0f       	add	r27, r27
 424:	40 f4       	brcc	.+16     	; 0x436 <__fp_round+0x20>
 426:	bf 2b       	or	r27, r31
 428:	11 f4       	brne	.+4      	; 0x42e <__fp_round+0x18>
 42a:	60 ff       	sbrs	r22, 0
 42c:	04 c0       	rjmp	.+8      	; 0x436 <__fp_round+0x20>
 42e:	6f 5f       	subi	r22, 0xFF	; 255
 430:	7f 4f       	sbci	r23, 0xFF	; 255
 432:	8f 4f       	sbci	r24, 0xFF	; 255
 434:	9f 4f       	sbci	r25, 0xFF	; 255
 436:	08 95       	ret

00000438 <__fp_split3>:
 438:	57 fd       	sbrc	r21, 7
 43a:	90 58       	subi	r25, 0x80	; 128
 43c:	44 0f       	add	r20, r20
 43e:	55 1f       	adc	r21, r21
 440:	59 f0       	breq	.+22     	; 0x458 <__fp_splitA+0x10>
 442:	5f 3f       	cpi	r21, 0xFF	; 255
 444:	71 f0       	breq	.+28     	; 0x462 <__fp_splitA+0x1a>
 446:	47 95       	ror	r20

00000448 <__fp_splitA>:
 448:	88 0f       	add	r24, r24
 44a:	97 fb       	bst	r25, 7
 44c:	99 1f       	adc	r25, r25
 44e:	61 f0       	breq	.+24     	; 0x468 <__fp_splitA+0x20>
 450:	9f 3f       	cpi	r25, 0xFF	; 255
 452:	79 f0       	breq	.+30     	; 0x472 <__fp_splitA+0x2a>
 454:	87 95       	ror	r24
 456:	08 95       	ret
 458:	12 16       	cp	r1, r18
 45a:	13 06       	cpc	r1, r19
 45c:	14 06       	cpc	r1, r20
 45e:	55 1f       	adc	r21, r21
 460:	f2 cf       	rjmp	.-28     	; 0x446 <__fp_split3+0xe>
 462:	46 95       	lsr	r20
 464:	f1 df       	rcall	.-30     	; 0x448 <__fp_splitA>
 466:	08 c0       	rjmp	.+16     	; 0x478 <__fp_splitA+0x30>
 468:	16 16       	cp	r1, r22
 46a:	17 06       	cpc	r1, r23
 46c:	18 06       	cpc	r1, r24
 46e:	99 1f       	adc	r25, r25
 470:	f1 cf       	rjmp	.-30     	; 0x454 <__fp_splitA+0xc>
 472:	86 95       	lsr	r24
 474:	71 05       	cpc	r23, r1
 476:	61 05       	cpc	r22, r1
 478:	08 94       	sec
 47a:	08 95       	ret

0000047c <__fp_zero>:
 47c:	e8 94       	clt

0000047e <__fp_szero>:
 47e:	bb 27       	eor	r27, r27
 480:	66 27       	eor	r22, r22
 482:	77 27       	eor	r23, r23
 484:	cb 01       	movw	r24, r22
 486:	97 f9       	bld	r25, 7
 488:	08 95       	ret

0000048a <__mulsf3>:
 48a:	0b d0       	rcall	.+22     	; 0x4a2 <__mulsf3x>
 48c:	c4 cf       	rjmp	.-120    	; 0x416 <__fp_round>
 48e:	b5 df       	rcall	.-150    	; 0x3fa <__fp_pscA>
 490:	28 f0       	brcs	.+10     	; 0x49c <__mulsf3+0x12>
 492:	ba df       	rcall	.-140    	; 0x408 <__fp_pscB>
 494:	18 f0       	brcs	.+6      	; 0x49c <__mulsf3+0x12>
 496:	95 23       	and	r25, r21
 498:	09 f0       	breq	.+2      	; 0x49c <__mulsf3+0x12>
 49a:	a6 cf       	rjmp	.-180    	; 0x3e8 <__fp_inf>
 49c:	ab cf       	rjmp	.-170    	; 0x3f4 <__fp_nan>
 49e:	11 24       	eor	r1, r1
 4a0:	ee cf       	rjmp	.-36     	; 0x47e <__fp_szero>

000004a2 <__mulsf3x>:
 4a2:	ca df       	rcall	.-108    	; 0x438 <__fp_split3>
 4a4:	a0 f3       	brcs	.-24     	; 0x48e <__mulsf3+0x4>

000004a6 <__mulsf3_pse>:
 4a6:	95 9f       	mul	r25, r21
 4a8:	d1 f3       	breq	.-12     	; 0x49e <__mulsf3+0x14>
 4aa:	95 0f       	add	r25, r21
 4ac:	50 e0       	ldi	r21, 0x00	; 0
 4ae:	55 1f       	adc	r21, r21
 4b0:	62 9f       	mul	r22, r18
 4b2:	f0 01       	movw	r30, r0
 4b4:	72 9f       	mul	r23, r18
 4b6:	bb 27       	eor	r27, r27
 4b8:	f0 0d       	add	r31, r0
 4ba:	b1 1d       	adc	r27, r1
 4bc:	63 9f       	mul	r22, r19
 4be:	aa 27       	eor	r26, r26
 4c0:	f0 0d       	add	r31, r0
 4c2:	b1 1d       	adc	r27, r1
 4c4:	aa 1f       	adc	r26, r26
 4c6:	64 9f       	mul	r22, r20
 4c8:	66 27       	eor	r22, r22
 4ca:	b0 0d       	add	r27, r0
 4cc:	a1 1d       	adc	r26, r1
 4ce:	66 1f       	adc	r22, r22
 4d0:	82 9f       	mul	r24, r18
 4d2:	22 27       	eor	r18, r18
 4d4:	b0 0d       	add	r27, r0
 4d6:	a1 1d       	adc	r26, r1
 4d8:	62 1f       	adc	r22, r18
 4da:	73 9f       	mul	r23, r19
 4dc:	b0 0d       	add	r27, r0
 4de:	a1 1d       	adc	r26, r1
 4e0:	62 1f       	adc	r22, r18
 4e2:	83 9f       	mul	r24, r19
 4e4:	a0 0d       	add	r26, r0
 4e6:	61 1d       	adc	r22, r1
 4e8:	22 1f       	adc	r18, r18
 4ea:	74 9f       	mul	r23, r20
 4ec:	33 27       	eor	r19, r19
 4ee:	a0 0d       	add	r26, r0
 4f0:	61 1d       	adc	r22, r1
 4f2:	23 1f       	adc	r18, r19
 4f4:	84 9f       	mul	r24, r20
 4f6:	60 0d       	add	r22, r0
 4f8:	21 1d       	adc	r18, r1
 4fa:	82 2f       	mov	r24, r18
 4fc:	76 2f       	mov	r23, r22
 4fe:	6a 2f       	mov	r22, r26
 500:	11 24       	eor	r1, r1
 502:	9f 57       	subi	r25, 0x7F	; 127
 504:	50 40       	sbci	r21, 0x00	; 0
 506:	8a f0       	brmi	.+34     	; 0x52a <__mulsf3_pse+0x84>
 508:	e1 f0       	breq	.+56     	; 0x542 <__mulsf3_pse+0x9c>
 50a:	88 23       	and	r24, r24
 50c:	4a f0       	brmi	.+18     	; 0x520 <__mulsf3_pse+0x7a>
 50e:	ee 0f       	add	r30, r30
 510:	ff 1f       	adc	r31, r31
 512:	bb 1f       	adc	r27, r27
 514:	66 1f       	adc	r22, r22
 516:	77 1f       	adc	r23, r23
 518:	88 1f       	adc	r24, r24
 51a:	91 50       	subi	r25, 0x01	; 1
 51c:	50 40       	sbci	r21, 0x00	; 0
 51e:	a9 f7       	brne	.-22     	; 0x50a <__mulsf3_pse+0x64>
 520:	9e 3f       	cpi	r25, 0xFE	; 254
 522:	51 05       	cpc	r21, r1
 524:	70 f0       	brcs	.+28     	; 0x542 <__mulsf3_pse+0x9c>
 526:	60 cf       	rjmp	.-320    	; 0x3e8 <__fp_inf>
 528:	aa cf       	rjmp	.-172    	; 0x47e <__fp_szero>
 52a:	5f 3f       	cpi	r21, 0xFF	; 255
 52c:	ec f3       	brlt	.-6      	; 0x528 <__mulsf3_pse+0x82>
 52e:	98 3e       	cpi	r25, 0xE8	; 232
 530:	dc f3       	brlt	.-10     	; 0x528 <__mulsf3_pse+0x82>
 532:	86 95       	lsr	r24
 534:	77 95       	ror	r23
 536:	67 95       	ror	r22
 538:	b7 95       	ror	r27
 53a:	f7 95       	ror	r31
 53c:	e7 95       	ror	r30
 53e:	9f 5f       	subi	r25, 0xFF	; 255
 540:	c1 f7       	brne	.-16     	; 0x532 <__mulsf3_pse+0x8c>
 542:	fe 2b       	or	r31, r30
 544:	88 0f       	add	r24, r24
 546:	91 1d       	adc	r25, r1
 548:	96 95       	lsr	r25
 54a:	87 95       	ror	r24
 54c:	97 f9       	bld	r25, 7
 54e:	08 95       	ret

00000550 <__divmodhi4>:
 550:	97 fb       	bst	r25, 7
 552:	07 2e       	mov	r0, r23
 554:	16 f4       	brtc	.+4      	; 0x55a <__divmodhi4+0xa>
 556:	00 94       	com	r0
 558:	06 d0       	rcall	.+12     	; 0x566 <__divmodhi4_neg1>
 55a:	77 fd       	sbrc	r23, 7
 55c:	08 d0       	rcall	.+16     	; 0x56e <__divmodhi4_neg2>
 55e:	0b d0       	rcall	.+22     	; 0x576 <__udivmodhi4>
 560:	07 fc       	sbrc	r0, 7
 562:	05 d0       	rcall	.+10     	; 0x56e <__divmodhi4_neg2>
 564:	3e f4       	brtc	.+14     	; 0x574 <__divmodhi4_exit>

00000566 <__divmodhi4_neg1>:
 566:	90 95       	com	r25
 568:	81 95       	neg	r24
 56a:	9f 4f       	sbci	r25, 0xFF	; 255
 56c:	08 95       	ret

0000056e <__divmodhi4_neg2>:
 56e:	70 95       	com	r23
 570:	61 95       	neg	r22
 572:	7f 4f       	sbci	r23, 0xFF	; 255

00000574 <__divmodhi4_exit>:
 574:	08 95       	ret

00000576 <__udivmodhi4>:
 576:	aa 1b       	sub	r26, r26
 578:	bb 1b       	sub	r27, r27
 57a:	51 e1       	ldi	r21, 0x11	; 17
 57c:	07 c0       	rjmp	.+14     	; 0x58c <__udivmodhi4_ep>

0000057e <__udivmodhi4_loop>:
 57e:	aa 1f       	adc	r26, r26
 580:	bb 1f       	adc	r27, r27
 582:	a6 17       	cp	r26, r22
 584:	b7 07       	cpc	r27, r23
 586:	10 f0       	brcs	.+4      	; 0x58c <__udivmodhi4_ep>
 588:	a6 1b       	sub	r26, r22
 58a:	b7 0b       	sbc	r27, r23

0000058c <__udivmodhi4_ep>:
 58c:	88 1f       	adc	r24, r24
 58e:	99 1f       	adc	r25, r25
 590:	5a 95       	dec	r21
 592:	a9 f7       	brne	.-22     	; 0x57e <__udivmodhi4_loop>
 594:	80 95       	com	r24
 596:	90 95       	com	r25
 598:	bc 01       	movw	r22, r24
 59a:	cd 01       	movw	r24, r26
 59c:	08 95       	ret

0000059e <_exit>:
 59e:	f8 94       	cli

000005a0 <__stop_program>:
 5a0:	ff cf       	rjmp	.-2      	; 0x5a0 <__stop_program>
